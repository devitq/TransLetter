stages:
  - linting
  - testing
  - running


flake8:
  stage: linting
  image: python:3.11
  script:
    - pip install -r requirements/lints.txt
    - flake8 .

black:
  stage: linting
  image: registry.gitlab.com/pipeline-components/black:latest
  script:
    - black --diff --check .

sort_check:
  stage: linting
  image: python:3.11
  script:
    - pip install sort-requirements
    - cd requirements
    - sort-requirements --check dev.txt prod.txt test.txt lints.txt

pytest:
  stage: testing
  image: python:3.11
  script:
    - apt-get update -y && apt-get install -y gettext 
    - pip install -r requirements/test.txt
    - cd transletter
    - django-admin compilemessages
    - python manage.py makemigrations --check
    - python manage.py migrate
    - python manage.py loaddata fixtures/data.json
    - python manage.py test

prod-run:
  stage: running
  image: python:3.11
  variables:
    DJANGO_DEBUG: "False"
  script:
    - pip install -r requirements/prod.txt
    - cd transletter
    - python manage.py migrate
    - gunicorn transletter.wsgi:application &
    - sleep 5
    - exit 0

dev-run:
  stage: running
  image: python:3.11
  script:
    - pip install -r requirements/dev.txt
    - cd transletter
    - python manage.py migrate
    - python manage.py runserver &
    - sleep 5
    - exit 0
